---
en:
  dfe:
    analytics:
      config:
        log_only:
          description: |
            Whether to log events instead of sending them to BigQuery.
          default: true
        async:
          description: Whether to use ActiveJob or dispatch events immediately.
          default: true
        queue:
          description: Which ActiveJob queue to put events on
          default: ":default"
        bigquery_table_name:
          description: The name of the BigQuery table we’re writing to.
          default: ENV['BIGQUERY_TABLE_NAME']
        bigquery_project_id:
          description: The name of the BigQuery project we’re writing to.
          default: ENV['BIGQUERY_PROJECT_ID']
        bigquery_api_json_key:
          description: |
            Service account JSON key for the BigQuery API. See
            https://cloud.google.com/bigquery/docs/authentication/service-account-file
          default: ENV['BIGQUERY_API_JSON_KEY']
        bigquery_dataset:
          description: |
            The name of the BigQuery dataset we're writing to.
          default: ENV['BIGQUERY_DATASET']
        bigquery_retries:
          description: |
            Passed directly to the retries: option on the BigQuery client
          default: 3
        bigquery_timeout:
          description: |
            Passed directly to the timeout: option on the BigQuery client
          default: 120
        enable_analytics:
          description: |
            A proc which returns true or false depending on whether you want to
            enable analytics. You might want to hook this up to a feature flag or
            environment variable.
          default: proc { true }
        environment:
          description: |
            The environment we’re running in. This value will be attached
            to all events we send to BigQuery.
          default: ENV.fetch('RAILS_ENV', 'development')
        user_identifier:
          description: |
            A proc which will be called with the user object, and which should
            return the identifier for the user. This is useful for systems with
            users that don't use the id field.
          default: proc { |user| user&.id }
        entity_table_checks_enabled:
          description: |
            Whether to run entity table checksum job.
          default: false
        rack_page_cached:
          description: |
            A proc which will be called with the rack env, and which should
            return a boolean indicating whether the page is cached and will
            be served by rack middleware.
          default: proc { |_rack_env| false }
        bigquery_maintenance_window:
          description: |
            Schedule a maintenance window during which no events are streamed to BigQuery
            in the format of '22-01-2024 19:30..22-01-2024 20:30' (UTC).
          default: ENV['BIGQUERY_MAINTENANCE_WINDOW']
        azure_federated_auth:
          description: |
            Whether to use azure workload identity federation for authentication
            instead of the BigQuery API JSON Key. Note that this also will also
            use a new version of the BigQuery streaming APIs.
          default: false
        azure_client_id:
          description: |
            Client Id of the app in azure
          default: ENV['AZURE_CLIENT_ID']
        azure_token_path:
          description: |
            Path of token file for used for getting token from azure ad
          default: ENV['AZURE_FEDERATED_TOKEN_FILE']
        azure_scope:
          description: |
            Azure audience scope
          default: api://AzureADTokenExchange/.default
        gcp_scope:
          description: |
            Google cloud scope
          default: https://www.googleapis.com/auth/cloud-platform
        google_cloud_credentials:
          description: |
            Google generated cloud credentials file
          default: ENV['GOOGLE_CLOUD_CREDENTIALS']
        excluded_models_proc:
          description: |
            A proc which will be called during model initialization. It allows to disable models
            which should not be used. Each model is passed to bloc and if bloc returns true for the model,
            it wont be used by the application. Eg: proc { |x| x.to_s =~ /Namespace::/ } will exclude all
            models namespaced with Namespace
          default: proc { |_model| false }
        database_events_enabled:
          description: |
            Whether to send database events
          default: true
        airbyte_enabled:
          description: |
            Perform airbyte checks on startup and allow airbyte config generation
          default: false
        airbyte_stream_config_path:
          description: |
            Path of airbyte stream config file relative to the App root (Rails.root)
          default: /terraform/aks/workspace-variables/airbyte_streams.json
        airbyte_client_id:
          description: |
            Airbyte Client Id for retrieving access token
          default: ENV['AIRBYTE_CLIENT_ID']
        airbyte_client_secret:
          description: |
            Airbyte Client secret for retrieving access token
          default: ENV['AIRBYTE_CLIENT_SECRET']
        airbyte_server_url:
          description: |
            Airbyte server base URL
          default: ENV['AIRBYTE_SERVER_URL']
        airbyte_workspace_id:
          description: |
            Airbyte Workspace Id for this App contains source, destination and connection
          default: ENV['AIRBYTE_WORKSPACE_ID']
