---
en:
  dfe:
    analytics:
      config:
        log_only:
          description: |
            Whether to log events instead of sending them to BigQuery.
          default: true
        async:
          description: Whether to use ActiveJob or dispatch events immediately.
          default: true
        queue:
          description: Which ActiveJob queue to put events on
          default: ":default"
        bigquery_table_name:
          description: The name of the BigQuery table we’re writing to.
          default: ENV['BIGQUERY_TABLE_NAME']
        bigquery_project_id:
          description: The name of the BigQuery project we’re writing to.
          default: ENV['BIGQUERY_PROJECT_ID']
        bigquery_api_json_key:
          description: |
            Service account JSON key for the BigQuery API. See
            https://cloud.google.com/bigquery/docs/authentication/service-account-file
          default: ENV['BIGQUERY_API_JSON_KEY']
        bigquery_dataset:
          description: |
            The name of the BigQuery dataset we're writing to.
          default: ENV['BIGQUERY_DATASET']
        bigquery_retries:
          description: |
            Passed directly to the retries: option on the BigQuery client
          default: 3
        bigquery_timeout:
          description: |
            Passed directly to the timeout: option on the BigQuery client
          default: 120
        enable_analytics:
          description: |
            A proc which returns true or false depending on whether you want to
            enable analytics. You might want to hook this up to a feature flag or
            environment variable.
          default: proc { true }
        environment:
          description: |
            The environment we’re running in. This value will be attached
            to all events we send to BigQuery.
          default: ENV.fetch('RAILS_ENV', 'development')
        user_identifier:
          description: |
            A proc which will be called with the user object, and which should
            return the identifier for the user. This is useful for systems with
            users that don't use the id field.
          default: proc { |user| user&.id }
        anonymise_web_request_user_id:
          description: |
            Whether to anonymise the user_id field in the web request event.
          default: false
        rack_page_cached:
          description: |
            A proc which will be called with the rack env, and which should
            return boolean indicating whether the page is cached and will be
            served by rack middleware.
          default: proc { |_rack_env| false }
